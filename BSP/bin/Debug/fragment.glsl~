#version 120

uniform sampler2D sampler;
uniform sampler2D LightMapsampler;
varying vec2 TexCoords;
varying vec2 LightMapTexCoords;

uniform bool lightmap;


const float offset = 1.0 / 300; 

vec4 SharpenImage(); 

void main()
{
	vec4 Color = texture2D(sampler, TexCoords);
	vec4 LightMap = texture2D(LightMapsampler, LightMapTexCoords);
	//if(Color.a < 0.1)
	//	discard;
	LightMap = LightMap * 4.0;
	if(lightmap)
	gl_FragColor = LightMap;
	else	
	gl_FragColor = Color;
	gl_FragColor.a = 1.0;
}

vec4 SharpenImage()
{
	
    vec2 offsets[9] = vec2[](
        vec2(-offset, offset),  // top-left
        vec2(0.0f,    offset),  // top-center
        vec2(offset,  offset),  // top-right
        vec2(-offset, 0.0f),    // center-left
        vec2(0.0f,    0.0f),    // center-center
        vec2(offset,  0.0f),    // center-right
        vec2(-offset, -offset), // bottom-left
        vec2(0.0f,    -offset), // bottom-center
        vec2(offset,  -offset)  // bottom-right    
    );

float kernel[9] = float[](
    1.0 / 16, 2.0 / 16, 1.0 / 16,
    2.0 / 16, 4.0 / 16, 2.0 / 16,
    1.0 / 16, 2.0 / 16, 1.0 / 16  
);
    
    vec3 sampleTex[9];
    for(int i = 0; i < 9; i++)
    {
        sampleTex[i] = vec3(texture2D(sampler, TexCoords.st + offsets[i]));
    }
    vec3 col;
    for(int i = 0; i < 9; i++)
        col += sampleTex[i] * kernel[i];
    
    return vec4(col, 1.0);
}  
